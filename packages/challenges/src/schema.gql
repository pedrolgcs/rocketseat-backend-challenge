# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  id: ID!
  repository: String!
  status: AnswerStatus!
  grade: Float
  createdAt: DateTime!
  challenge: Challenge
}

"""The status of the answer"""
enum AnswerStatus {
  PENDING
  DONE
  ERROR
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Challenge {
  id: ID!
  title: String!
  description: String!
  createdAt: DateTime!
  answers: [Answer!]!
}

type Query {
  challenges(filter: ListChallengesInput!): [Challenge!]!
  answers(filter: ListAnswersInput!): [Answer!]!
}

input ListChallengesInput {
  title: String
  description: String
  page: Float
  perPage: Float
}

input ListAnswersInput {
  challengeId: String
  dateStart: DateTime
  dateEnd: DateTime
  status: String
  page: Float
  perPage: Float
}

type Mutation {
  createChallenge(data: CreateChallengeInput!): Challenge!
  updateChallenge(id: String!, data: UpdateChallengeInput!): Challenge!
  deleteChallenge(id: String!): Challenge!
  answerChallenge(data: CreateAnswerInput!): Answer!
}

input CreateChallengeInput {
  title: String!
  description: String!
}

input UpdateChallengeInput {
  title: String!
  description: String!
}

input CreateAnswerInput {
  repository: String!
  challengeId: String!
}